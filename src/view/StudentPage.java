/*
 * StudentPage.java
 *
 * Created on __DATE__, __TIME__
 */

package view;

import java.util.List;
import java.util.Vector;

import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

import controller.DeptController;
import controller.StudentController;
import model.Dept;
import model.Student;
import util.DataUtil;
import dao.DbUtil;
import javax.swing.GroupLayout.Alignment;
import javax.swing.GroupLayout;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JLabel;
import javax.swing.JTextField;
import javax.swing.JButton;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import java.awt.event.ActionListener;
import java.sql.SQLException;
import java.awt.event.ActionEvent;
import java.awt.Point;

/**
 *
 * @author  __USER__
 */
public class StudentPage extends javax.swing.JFrame {
	/** Creates new form StudentPage 
	 * @throws SQLException 
	 * @throws ClassNotFoundException 
	 * @throws UnsupportedLookAndFeelException 
	 * @throws IllegalAccessException 
	 * @throws InstantiationException */
	public StudentPage() throws ClassNotFoundException, SQLException, InstantiationException, IllegalAccessException, UnsupportedLookAndFeelException {
		setLocation(new Point(500, 400));
		setType(Type.POPUP);
		initComponents();
		this.initData();
	}

	private void initData() throws ClassNotFoundException, SQLException {
		DefaultTableModel dtm = (DefaultTableModel) userTable.getModel();
		dtm.setRowCount(0);
		List<Student> students = null;
		students = studentController.selectAll();
		if (students != null) {
			for (Student student : students) {
				Vector v = new Vector();
				v.add(student.getStudentId());
				v.add(student.getStudentName());
				v.add(student.getSex() == 0 ? "男" : "女");
				v.add(student.getAge());
				v.add(student.getDept().getDeptName());
				dtm.addRow(v);
			}
		}
		List<Dept> depts = deptController.selectAllDept();
		if (depts == null || depts.isEmpty()) {
			deptList.addItem("无");
		} else {
			for (Dept dept : depts) {
				deptList.addItem(dept.getDeptName());
			}
		}
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 * @throws UnsupportedLookAndFeelException 
	 * @throws IllegalAccessException 
	 * @throws InstantiationException 
	 * @throws ClassNotFoundException 
	 */
	//GEN-BEGIN:initComponents
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() throws ClassNotFoundException, InstantiationException, IllegalAccessException, UnsupportedLookAndFeelException {
		search = new JTextField();
		jScrollPane1 = new JScrollPane();
		userTable = new JTable();
		userTable.setRowHeight(25);

		// 当前系统的风格
		String lookAndFeel = UIManager.getSystemLookAndFeelClassName();
		UIManager.setLookAndFeel(lookAndFeel);
		
		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
		setTitle("学生管理");

		jButton1 = new JButton("添加");
		jButton1.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				try {
					jButton1ActionPerformed(evt);
				} catch (ClassNotFoundException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				} catch (SQLException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				} catch (InstantiationException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				} catch (IllegalAccessException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				} catch (UnsupportedLookAndFeelException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}
		});

		jButton2 = new JButton("查询");
		jButton2.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				try {
					jButton2ActionPerformed(evt);
				} catch (ClassNotFoundException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				} catch (SQLException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}
		});

		userTable.setModel(new DefaultTableModel(
			new Object[][] {
				{null, null, null, null, null},
				{null, null, null, null, null},
				{null, null, null, null, null},
				{null, null, null, null, null},
				{null, null, null, null, null},
				{null, null, null, null, null},
				{null, null, null, null, null},
			},
			new String[] {
				"学号", "姓名", "性别", "年龄", "院系"
			}
		) {
			boolean[] columnEditables = new boolean[] {
				false, false, false, false, false
			};
			public boolean isCellEditable(int row, int column) {
				return columnEditables[column];
			}
		});
		userTable.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mousePressed(java.awt.event.MouseEvent evt) {
				userTableMousePressed(evt);
			}
		});
		jScrollPane1.setViewportView(userTable);

		jButton3 = new JButton("修改");
		jButton3.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				try {
					jButton3ActionPerformed(evt);
				} catch (ClassNotFoundException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				} catch (SQLException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}
		});

		jButton4 = new JButton("删除");
		jButton4.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				try {
					jButton4ActionPerformed(evt);
				} catch (ClassNotFoundException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				} catch (SQLException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}
		});
		
		typeList = new JComboBox();
		typeList.setModel(new DefaultComboBoxModel(new String[] {"学号", "姓名", "性别", "年龄", "院系"}));
		
		idLabel = new JLabel("学号：");
		
		idEdit = new JTextField();
		idEdit.setEditable(false);
		idEdit.setColumns(10);
		
		nameLabel = new JLabel("姓名：");
		
		nameEdit = new JTextField();
		nameEdit.setColumns(10);
		
		sexLabel = new JLabel("性别：");
		
		ageLabel = new JLabel("年龄：");
		
		ageEdit = new JTextField();
		ageEdit.setColumns(10);
		
		deptLabel = new JLabel("学院：");
		
		deptList = new JComboBox();
		
		
		sexEdit = new JComboBox();
		sexEdit.setModel(new DefaultComboBoxModel(new String[] {"男", "女"}));
		
		gradeBtn = new JButton("查询成绩");
		gradeBtn.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				try {
					new GradePage().setVisible(true);
				} catch (ClassNotFoundException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				} catch (InstantiationException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				} catch (IllegalAccessException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				} catch (UnsupportedLookAndFeelException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
			}
		});

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(
				getContentPane());
		layout.setHorizontalGroup(
			layout.createParallelGroup(Alignment.LEADING)
				.addGroup(layout.createSequentialGroup()
					.addGap(23)
					.addGroup(layout.createParallelGroup(Alignment.LEADING)
						.addComponent(jScrollPane1, GroupLayout.DEFAULT_SIZE, 568, Short.MAX_VALUE)
						.addGroup(layout.createSequentialGroup()
							.addComponent(typeList, GroupLayout.PREFERRED_SIZE, 56, GroupLayout.PREFERRED_SIZE)
							.addGap(12)
							.addComponent(search, GroupLayout.PREFERRED_SIZE, 172, GroupLayout.PREFERRED_SIZE)
							.addGap(18)
							.addComponent(jButton2)
							.addPreferredGap(ComponentPlacement.RELATED, 156, Short.MAX_VALUE)
							.addComponent(gradeBtn, GroupLayout.PREFERRED_SIZE, 97, GroupLayout.PREFERRED_SIZE))
						.addGroup(layout.createSequentialGroup()
							.addGroup(layout.createParallelGroup(Alignment.LEADING)
								.addGroup(layout.createSequentialGroup()
									.addComponent(idLabel)
									.addGap(8)
									.addComponent(idEdit, GroupLayout.PREFERRED_SIZE, 125, GroupLayout.PREFERRED_SIZE)
									.addPreferredGap(ComponentPlacement.UNRELATED)
									.addComponent(nameLabel))
								.addGroup(layout.createSequentialGroup()
									.addComponent(sexLabel)
									.addGap(8)
									.addComponent(sexEdit, GroupLayout.PREFERRED_SIZE, 53, GroupLayout.PREFERRED_SIZE)
									.addGap(80)
									.addComponent(ageLabel)))
							.addPreferredGap(ComponentPlacement.RELATED)
							.addGroup(layout.createParallelGroup(Alignment.LEADING, false)
								.addComponent(ageEdit)
								.addComponent(nameEdit, GroupLayout.DEFAULT_SIZE, 99, Short.MAX_VALUE))
							.addPreferredGap(ComponentPlacement.UNRELATED)
							.addComponent(deptLabel)
							.addPreferredGap(ComponentPlacement.RELATED)
							.addGroup(layout.createParallelGroup(Alignment.LEADING)
								.addGroup(layout.createSequentialGroup()
									.addComponent(jButton1)
									.addPreferredGap(ComponentPlacement.RELATED)
									.addComponent(jButton3)
									.addPreferredGap(ComponentPlacement.RELATED)
									.addComponent(jButton4))
								.addComponent(deptList, 0, 0, Short.MAX_VALUE))))
					.addGap(23))
		);
		layout.setVerticalGroup(
			layout.createParallelGroup(Alignment.TRAILING)
				.addGroup(layout.createSequentialGroup()
					.addGap(19)
					.addGroup(layout.createParallelGroup(Alignment.BASELINE)
						.addComponent(jButton2)
						.addComponent(typeList, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
						.addComponent(search, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
						.addComponent(gradeBtn))
					.addGap(20)
					.addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, 214, GroupLayout.PREFERRED_SIZE)
					.addPreferredGap(ComponentPlacement.RELATED)
					.addGroup(layout.createParallelGroup(Alignment.LEADING)
						.addComponent(idLabel)
						.addComponent(idEdit, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
						.addComponent(nameLabel)
						.addComponent(nameEdit, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
						.addGroup(layout.createParallelGroup(Alignment.BASELINE)
							.addComponent(jButton3)
							.addComponent(jButton1))
						.addComponent(jButton4))
					.addPreferredGap(ComponentPlacement.RELATED)
					.addGroup(layout.createParallelGroup(Alignment.BASELINE)
						.addComponent(sexLabel)
						.addComponent(ageLabel)
						.addComponent(ageEdit, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
						.addComponent(deptLabel)
						.addComponent(deptList, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
						.addComponent(sexEdit, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
					.addContainerGap())
		);
		getContentPane().setLayout(layout);
		pack();
	}// </editor-fold>
	//GEN-END:initComponents

	/**
	 * 删除按钮
	 * @param evt
	 * @throws SQLException 
	 * @throws ClassNotFoundException 
	 */
	private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) throws ClassNotFoundException, SQLException {
		Integer id = Integer.valueOf(idEdit.getText());
		int row = studentController.deleteStudent(id);
		if (row == 0) {
			JOptionPane.showMessageDialog(null, "删除失败","删除", JOptionPane.ERROR_MESSAGE);
			return;
		}
		JOptionPane.showMessageDialog(null, "删除了" + row + "条数据","删除", JOptionPane.ERROR_MESSAGE);
		initData();
	}
	
	/**
	 * 修改按钮
	 * @param evt
	 * @throws SQLException 
	 * @throws ClassNotFoundException 
	 */
	private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) throws ClassNotFoundException, SQLException {
		Integer id = Integer.valueOf(idEdit.getText());
		String name = nameEdit.getText();
		if (name == null || name.length() <= 1) {
			JOptionPane.showMessageDialog(null, "姓名有误","参数错误", JOptionPane.ERROR_MESSAGE);
			return;
		}
		String sex = (String)sexEdit.getSelectedItem();
		String num = ageEdit.getText();
		if (num == null || "".equals(num) == true || DataUtil.isInteger(num) == false) {
			JOptionPane.showMessageDialog(null, "年龄有误","参数错误", JOptionPane.ERROR_MESSAGE);
			return;
		}
		Integer age = Integer.valueOf(num);
		String dept = (String)deptList.getSelectedItem();
		int row = studentController.updateStudent(id, name, sex, age, dept);
		if (row == 0) {
			JOptionPane.showMessageDialog(null, "修改失败","修改", JOptionPane.ERROR_MESSAGE);
			return;
		}
		JOptionPane.showMessageDialog(null, "修改了" + row + "条数据","修改", JOptionPane.ERROR_MESSAGE);
		initData();
	}
	
	/**
	 * 获取表格数据
	 * @param evt
	 */
	private void userTableMousePressed(java.awt.event.MouseEvent evt) {
		int row = userTable.getSelectedRow();
		idEdit.setText(String.valueOf(userTable.getValueAt(row, 0)));
		nameEdit.setText((String) userTable.getValueAt(row, 1));
		sexEdit.setSelectedItem((String) userTable.getValueAt(row, 2));
		ageEdit.setText(String.valueOf(userTable.getValueAt(row, 3)));
		deptList.setSelectedItem((String) userTable.getValueAt(row, 4));
	}

	/**
	 * 查询按钮
	 * @param evt
	 * @throws ClassNotFoundException
	 * @throws SQLException
	 */
	private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) throws ClassNotFoundException, SQLException {
		DefaultTableModel dtm = (DefaultTableModel) userTable.getModel();
		dtm.setRowCount(0);
		String type = (String)typeList.getSelectedItem();
		String searchText = search.getText();
		List<Student> list = null;
		if(searchText == null || "".equals(searchText)) {
			list = studentController.selectAll();
		} else {
			if ("学号".equals(type)) {
				if (!DataUtil.isInteger(searchText))  {
					JOptionPane.showMessageDialog(null, "学号有误","参数错误", JOptionPane.ERROR_MESSAGE);
					list = studentController.selectAll();
				} else {
					Integer id = Integer.valueOf(searchText);
					list = studentController.selectById(id);
				}
			} else if ("姓名".equals(type)) {
				String name = searchText;
				list = studentController.selectLikeName(name);
			} else if ("性别".equals(type)) {
				String sex = searchText;
				list = studentController.selectBySex(sex);
			} else if ("年龄".equals(type)) {
				if (!DataUtil.isInteger(searchText)) {
					JOptionPane.showMessageDialog(null, "年龄有误","参数错误", JOptionPane.ERROR_MESSAGE);
					list = studentController.selectAll();
				} else {
					Integer age = Integer.valueOf(searchText);
					list = studentController.selectByAge(age);
				}
			} else if ("院系".equals(type)) {
				 String deptName = searchText;
				 list = studentController.selectByDept(deptName);
			}
		}
		
		if (list != null) {
			for (Student student : list) {
				Vector v = new Vector();
				v.add(student.getStudentId());
				v.add(student.getStudentName());
				v.add(student.getSex() == 0 ? "男" : "女");
				v.add(student.getAge());
				v.add(student.getDept().getDeptName());
				dtm.addRow(v);
			}
		}
	}
	/**
	 * 增加按钮
	 * @param evt
	 * @throws ClassNotFoundException
	 * @throws SQLException
	 * @throws InstantiationException
	 * @throws IllegalAccessException
	 * @throws UnsupportedLookAndFeelException
	 */
	private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) throws ClassNotFoundException, SQLException, InstantiationException, IllegalAccessException, UnsupportedLookAndFeelException {
		String name = nameEdit.getText();
		if (name == null || name.length() <= 1) {
			JOptionPane.showMessageDialog(null, "姓名有误","参数错误", JOptionPane.ERROR_MESSAGE);
			return;
		}
		String sex = (String)sexEdit.getSelectedItem();
		String num = ageEdit.getText();
		if (num == null || "".equals(num) == true || DataUtil.isInteger(num) == false) {
			JOptionPane.showMessageDialog(null, "年龄有误","参数错误", JOptionPane.ERROR_MESSAGE);
			return;
		}
		Integer age = Integer.valueOf(num);
		String dept = (String)deptList.getSelectedItem();
		int row = studentController.insertStudent(name, sex, age, dept);
		if (row == 0) {
			JOptionPane.showMessageDialog(null, "添加失败","添加", JOptionPane.ERROR_MESSAGE);
			return;
		}
		JOptionPane.showMessageDialog(null, "添加了" + row + "条数据","添加", JOptionPane.ERROR_MESSAGE);
		initData();
	}

	/**
	 * @param args the command line arguments
	 */
//	public static void main(String args[]) {
//		java.awt.EventQueue.invokeLater(new Runnable() {
//			public void run() {
//				try {
//					new StudentPage().setVisible(true);
//				} catch (ClassNotFoundException e) {
//					// TODO Auto-generated catch block
//					e.printStackTrace();
//				} catch (SQLException e) {
//					// TODO Auto-generated catch block
//					e.printStackTrace();
//				} catch (InstantiationException e) {
//					// TODO Auto-generated catch block
//					e.printStackTrace();
//				} catch (IllegalAccessException e) {
//					// TODO Auto-generated catch block
//					e.printStackTrace();
//				} catch (UnsupportedLookAndFeelException e) {
//					// TODO Auto-generated catch block
//					e.printStackTrace();
//				}
//			}
//		});
//	}
//	
	private StudentController studentController = new StudentController();
	private DbUtil dbUtil = new DbUtil();
	private DeptController deptController = new DeptController();
	
	private JButton jButton1;
	private JButton jButton3;
	private JButton jButton4;
	private JScrollPane jScrollPane1;
	private JTextField search;
	private JTable userTable;
	private JComboBox typeList;
	private JComboBox deptList;
	private JLabel idLabel;
	private JLabel sexLabel;
	private JTextField idEdit;
	private JLabel nameLabel;
	private JTextField nameEdit;
	private JLabel ageLabel;
	private JTextField ageEdit;
	private JLabel deptLabel;
	private JButton jButton2;
	private JComboBox sexEdit;
	private JButton gradeBtn;
}